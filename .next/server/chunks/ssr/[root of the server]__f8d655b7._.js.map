{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/compraventa/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/compraventa/src/ai/flows/recommend-products.ts"],"sourcesContent":["// src/ai/flows/recommend-products.ts\n'use server';\n/**\n * @fileOverview AI-powered product recommendation flow.\n *\n * - recommendProducts - A function that recommends products based on a search query.\n * - RecommendProductsInput - The input type for the recommendProducts function.\n * - RecommendProductsOutput - The return type for the recommendProducts function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst RecommendProductsInputSchema = z.object({\n  searchQuery: z.string().describe('The user search query.'),\n  productCategories: z.array(z.string()).optional().describe('List of available product categories.'),\n  products: z.array(\n    z.object({\n      name: z.string(),\n      description: z.string(),\n      price: z.number(),\n      category: z.string(),\n    })\n  ).describe('List of available products to recommend from')\n});\nexport type RecommendProductsInput = z.infer<typeof RecommendProductsInputSchema>;\n\nconst RecommendProductsOutputSchema = z.array(\n  z.object({\n    name: z.string(),\n    description: z.string(),\n    price: z.number(),\n    category: z.string(),\n  })\n).describe('Recommended products based on the search query.');\nexport type RecommendProductsOutput = z.infer<typeof RecommendProductsOutputSchema>;\n\nexport async function recommendProducts(input: RecommendProductsInput): Promise<RecommendProductsOutput> {\n  return recommendProductsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'recommendProductsPrompt',\n  input: {schema: RecommendProductsInputSchema},\n  output: {schema: RecommendProductsOutputSchema},\n  prompt: `You are a product recommendation expert. Given a user's search query and a list of available products, you will recommend products that are relevant to the search query.\n\nSearch Query: {{{searchQuery}}}\n\nAvailable Products:\n{{#each products}}\n- Name: {{this.name}}, Description: {{this.description}}, Price: {{this.price}}, Category: {{this.category}}\n{{/each}}\n\nProduct Categories: {{productCategories}}\n\nBased on the search query, recommend products from the list of available products. Only return products that are thematically related to the search query. Do not recommend products that are not related to the search query. Consider product categories to help narrow down the recommendations.\n\nReturn the recommended products in JSON format.\n`,\n});\n\nconst recommendProductsFlow = ai.defineFlow(\n  {\n    name: 'recommendProductsFlow',\n    inputSchema: RecommendProductsInputSchema,\n    outputSchema: RecommendProductsOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,qCAAqC;;;;;;AAErC;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,+BAA+B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5C,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACjC,mBAAmB,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IAAI,QAAQ,GAAG,QAAQ,CAAC;IAC3D,UAAU,uIAAA,CAAA,IAAC,CAAC,KAAK,CACf,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QACP,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM;QACd,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM;QACrB,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM;QACf,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM;IACpB,IACA,QAAQ,CAAC;AACb;AAGA,MAAM,gCAAgC,uIAAA,CAAA,IAAC,CAAC,KAAK,CAC3C,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACP,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM;IACd,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM;IACrB,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM;IACf,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM;AACpB,IACA,QAAQ,CAAC;AAGJ,eAAe,uCAAe,GAAf,kBAAkB,KAA6B;IACnE,OAAO,sBAAsB;AAC/B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA4B;IAC5C,QAAQ;QAAC,QAAQ;IAA6B;IAC9C,QAAQ,CAAC;;;;;;;;;;;;;;AAcX,CAAC;AACD;AAEA,MAAM,wBAAwB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACzC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAlCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/compraventa/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 383, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/compraventa/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 397, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}